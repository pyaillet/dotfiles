#!/usr/bin/env bash

CURRENT_FILE="$HOME/.zshrc.d/080_switch_kubeconfig"

switch_kc() {
  if [[ -z $1 ]]; then
      export CONTEXT=""
  else
      export CONTEXT="-$1"
  fi
  sed -i '' "/^export/d" "$CURRENT_FILE"
  
  export KUBECONFIG="$HOME/.kube/config$CONTEXT"
  KUBECGG_CMD="export KUBECONFIG=\"$HOME/.kube/config$CONTEXT\""
  echo "$KUBECGG_CMD" >> "$CURRENT_FILE"
}

list_kc() {
  # shellcheck disable=SC2001
  CURRENT=$(echo "$KUBECONFIG" | sed -e 's/^.*config-//')
  for i in ~/.kube/config*; do

    # shellcheck disable=SC2001
    CFG=$(echo "$i" | sed -e 's/^.*config-//')
    if [[ "$CFG" = "$CURRENT" ]]; then
      echo "$(tput bold)* $CFG$(tput sgr0)"
    else
      echo "  $CFG"
    fi
  done
}

current_kc() {
  # shellcheck disable=SC2001
  echo "$KUBECONFIG" | sed -e 's/^.*config-//'
}

gen_rancher_config() {
  config_name="$1"
  tmpdir=$(mktemp -d)
  clusters=$(rancher cluster ls | tr '*' ' ' | grep c- | awk '{ print $3 }')
  echo $clusters
  KUBECONFIG_ALL=""
  while read cluster; do
    echo "Getting config for cluster: ${cluster}"
    rancher cluster kubeconfig "${cluster}" > "${tmpdir}/config-${cluster}"
    KUBECONFIG_ALL="${KUBECONFIG_ALL}:${tmpdir}/config-${cluster}"
  done <<< $clusters

  echo $(KUBECONFIG="${KUBECONFIG_ALL}" kubectl config view | tee ~/.kube/config-${config_name})
}

export KUBECONFIG="/Users/pyaillet/.kube/config-scaleway"
